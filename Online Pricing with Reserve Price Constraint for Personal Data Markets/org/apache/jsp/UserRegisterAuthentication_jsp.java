/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.59
 * Generated at: 2022-06-20 05:45:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.io.*;
import java.util.*;
import com.oreilly.servlet.*;

public final class UserRegisterAuthentication_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/connect.jsp", Long.valueOf(1655442798506L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<title> </title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-1.4.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.jcarousel.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/cufon-yui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/MyriadPro.font.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/ArialBold.font.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-func.js\"></script>\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"css/images/favicon.ico\" />\r\n");
      out.write("<!--[if IE 6]><link rel=\"stylesheet\" href=\"css/ie.css\" type=\"text/css\" media=\"all\" /><![endif]-->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<!--\r\n");
      out.write(".style13 {\r\n");
      out.write("\tfont-size: 25px;\r\n");
      out.write("\tfont-family: \"Times New Roman\", Times, serif;\r\n");
      out.write("\tcolor: #272727;\r\n");
      out.write("}\r\n");
      out.write(".style14 {color: #FF00FF}\r\n");
      out.write(".style15 {color: #FF0000}\r\n");
      out.write(".style5 {font-size: 14px}\r\n");
      out.write(".style6 {\tfont-size: 16px;\r\n");
      out.write("\tcolor: #000000;\r\n");
      out.write("}\r\n");
      out.write(".style16 {font-size: 14px; color: #FF00FF; }\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- START PAGE SOURCE -->\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("  <div class=\"shell\">\r\n");
      out.write("    <pre class=\"box\"><span class=\"box style13\">Online Pricing with Reserve Price Constraint for Personal Data Markets</span>\r\n");
      out.write("    </pre>\r\n");
      out.write("    <div id=\"navigation\">\r\n");
      out.write("      <ul>\r\n");
      out.write("\t  <li><a href=\"index.html\">HOME</a></li>\r\n");
      out.write("      <li><a href=\"UserLogin.jsp\" class=\"active\">USER</a></li>\r\n");
      out.write("      <li><a href=\"AdminLogin.jsp\">Data Owner</a></li>\r\n");
      out.write("\t  <li><a href=\"EcommerceLogin.jsp\">Agent</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"intro\">\r\n");
      out.write("  <div class=\"shell\">\r\n");
      out.write("    <div class=\"slider-holder\">\r\n");
      out.write("      <ul>\r\n");
      out.write("        <li>\r\n");
      out.write("          <div class=\"offer-image\"> <img src=\"css/images/offer-image-1.jpg\" alt=\"\" /> </div>\r\n");
      out.write("          <div class=\"offer-data\">\r\n");
      out.write("            <h3>Concept</h3>\r\n");
      out.write("            <div class=\"entry\">\r\n");
      out.write("              <p>Online Pricing with Reserve Price Constraint for Personal Data Markets----personal data market, revenue maximization, contextual dynamic pricing, reserve price, ellipsoid..</p>\r\n");
      out.write("            </div>\r\n");
      out.write("           \r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <div class=\"offer-image\"> <img src=\"css/images/offer-image-2.jpg\" alt=\"\" /> </div>\r\n");
      out.write("          <div class=\"offer-data\">\r\n");
      out.write("            <h3>Concept</h3>\r\n");
      out.write("            <div class=\"entry\">\r\n");
      out.write("              <p>Online Pricing with Reserve Price Constraint for Personal Data Markets----personal data market, revenue maximization, contextual dynamic pricing, reserve price, ellipsoid.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <div class=\"offer-image\"> <img src=\"css/images/offer-image-3.jpg\" alt=\"\" /> </div>\r\n");
      out.write("          <div class=\"offer-data\">\r\n");
      out.write("            <h3>Concept</h3>\r\n");
      out.write("            <div class=\"entry\">\r\n");
      out.write("              <p>Online Pricing with Reserve Price Constraint for Personal Data Markets----personal data market, revenue maximization, contextual dynamic pricing, reserve price, ellipsoid.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("       </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <div class=\"offer-image\"> <img src=\"css/images/offer-image-4.jpg\" alt=\"\" /> </div>\r\n");
      out.write("          <div class=\"offer-data\">\r\n");
      out.write("            <h3>Concept</h3>\r\n");
      out.write("            <div class=\"entry\">\r\n");
      out.write("              <p>Online Pricing with Reserve Price Constraint for Personal Data Markets----personal data market, revenue maximization, contextual dynamic pricing, reserve price, ellipsoid.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <div class=\"offer-image\"> <img src=\"css/images/offer-image-5.jpg\" alt=\"\" /> </div>\r\n");
      out.write("          <div class=\"offer-data\">\r\n");
      out.write("            <h3>Concept</h3>\r\n");
      out.write("            <div class=\"entry\">\r\n");
      out.write("              <p>Online Pricing with Reserve Price Constraint for Personal Data Markets----personal data market, revenue maximization, contextual dynamic pricing, reserve price, ellipsoid.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("       </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"slider-navigation\">\r\n");
      out.write("      <ul>\r\n");
      out.write("        <li><a href=\"#\">1</a></li>\r\n");
      out.write("        <li><a href=\"#\">2</a></li>\r\n");
      out.write("        <li><a href=\"#\">3</a></li>\r\n");
      out.write("        <li><a href=\"#\">4</a></li>\r\n");
      out.write("        <li><a href=\"#\">5</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"main\">\r\n");
      out.write("  <div class=\"shell\">\r\n");
      out.write("    <div class=\"box\">\r\n");
      out.write("      <h2>Welcome!</h2>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"box\">\r\n");
      out.write("      <h2>User Registration Status </h2>\r\n");
      out.write("      <div class=\"entry\">\r\n");
      out.write("        <div id=\"templatemo_right_section\">\r\n");
      out.write("          <div class=\"templatemo_h_line\"> </div>\r\n");
      out.write("          <h1>\r\n");
      out.write("            ");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Connection connection = null;
 	try {
     

	  	Class.forName("com.mysql.jdbc.Driver");	
		connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/OPRP","root","");
      	String sql="";

	}
	catch(Exception e)
	{
		System.out.println(e);
	}

      out.write("\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            ");

			       
					
				    ArrayList list = new ArrayList();
					
					ServletContext context = getServletContext();
					
					String dirName =context.getRealPath("Gallery/");
					
					String paramname=null,uname=null,pass=null,email=null,mno=null,addr=null,dob=null,gender=null,pincode=null,location=null,image=null,cloud=null,bin = "";
				
					FileInputStream fs=null;
					
					File file1 = null;	
					
					try {
						MultipartRequest multi = new MultipartRequest(request, dirName,	10 * 1024 * 1024);	
						
						Enumeration params = multi.getParameterNames();
						
						while (params.hasMoreElements()) 
						{
							paramname = (String) params.nextElement();
							
							if(paramname.equalsIgnoreCase("userid"))
							{
								uname=multi.getParameter(paramname);
							}
							if(paramname.equalsIgnoreCase("pass"))
							{
								pass=multi.getParameter(paramname);
							}
							if(paramname.equalsIgnoreCase("email"))
							{
								email=multi.getParameter(paramname);
							}
							if(paramname.equalsIgnoreCase("mobile"))
							{
								mno=multi.getParameter(paramname);
							}
							if(paramname.equalsIgnoreCase("address"))
							{
								addr=multi.getParameter(paramname);
							}
							if(paramname.equalsIgnoreCase("dob"))
							{
								dob=multi.getParameter(paramname);
							} 
							if(paramname.equalsIgnoreCase("gender"))
							{
								gender=multi.getParameter(paramname);
							}
							if(paramname.equalsIgnoreCase("pincode"))
							{
								pincode=multi.getParameter(paramname);
							}
							


						}
							
						int f = 0;
						Enumeration files = multi.getFileNames();	
						while (files.hasMoreElements()) 
						{
							paramname = (String) files.nextElement();
							
							if(paramname != null)
							{
								f = 1;
								image = multi.getFilesystemName(paramname);
								String fPath = context.getRealPath("Gallery\\"+image);
								file1 = new File(fPath);
								fs = new FileInputStream(file1);
								list.add(fs);
							
								String ss=fPath;
								FileInputStream fis = new FileInputStream(ss);
								StringBuffer sb1=new StringBuffer();
								int i = 0;
								while ((i = fis.read()) != -1) 
								{
									if (i != -1)
									 {
										//System.out.println(i);
										String hex = Integer.toHexString(i);
										// session.put("hex",hex);
										sb1.append(hex);
										
									
										String binFragment = "";
										int iHex;
			 
										for(int i1= 0; i1 < hex.length(); i1++)
										{
											iHex = Integer.parseInt(""+hex.charAt(i1),16);
											binFragment = Integer.toBinaryString(iHex);
			
											while(binFragment.length() < 4)
											{
												binFragment = "0" + binFragment;
											}
											bin += binFragment;
							
						                }
									}	
									
								}
								
							}		
						}
						
						
		
						FileInputStream fs1 = null;
			 			String query1="select * from user  where username='"+uname+"' "; 
						Statement st1=connection.createStatement();
						ResultSet rs1=st1.executeQuery(query1);
						
							
					if ( rs1.next() )
					   {
					   		
      out.write("\r\n");
      out.write("          </p>\r\n");
      out.write("          <p class=\"style6\">User Name Already Exist</p>\r\n");
      out.write("          <p class=\"style5\">&nbsp;</p>\r\n");
      out.write("          ");

							
							
				
      out.write("\r\n");
      out.write("          <p align=\"left\"><a href=\"UserRegister.jsp\" class=\"style5 style14\">Back</a></p>\r\n");
      out.write("          ");

				
					   }
					   else
					   {
					   
					  String status = "Waiting";
PreparedStatement ps=connection.prepareStatement("insert into user(username,password,email,mobile,address,dob,gender,pincode,status,image) values(?,?,?,?,?,?,?,?,?,?)");
						ps.setString(1,uname);
						ps.setString(2,pass);
						ps.setString(3,email);	
						ps.setString(4,mno);
						ps.setString(5,addr);
						ps.setString(6,dob);
						ps.setString(7,gender);
						ps.setString(8,pincode);
				        ps.setString(9,status);
						ps.setBinaryStream(10, (InputStream)fs, (int)(file1.length()));	
				       
						
						if(f == 0)
							ps.setObject(10,null);
						else if(f == 12)
						{
							fs1 = (FileInputStream)list.get(0);
							ps.setBinaryStream(10,fs1,fs1.available());
						}	
						
						int x=ps.executeUpdate();
						if(x>0)
						{
						
      out.write("\r\n");
      out.write("          <p class=\"style6\">Registered Successfully</p>\r\n");
      out.write("          <p>&nbsp; </p>\r\n");
      out.write("          <p>\r\n");
      out.write("            ");
	
							
			
      out.write("\r\n");
      out.write("          </p>\r\n");
      out.write("          <p align=\"left\"><a href=\"UserLogin.jsp\" class=\"style16\">Back</a></p>\r\n");
      out.write("          ");

			
					}}}
					catch (Exception e) 
					{
						out.println(e.getMessage());
					}
			
      out.write("\r\n");
      out.write("          </p>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("     \r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"cl\">&nbsp;</div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"footer\"></div>\r\n");
      out.write("<!-- END PAGE SOURCE -->\r\n");
      out.write("<div align=center></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
